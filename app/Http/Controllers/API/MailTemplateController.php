<?php

namespace App\Http\Controllers\API;

use App\Helpers\Helper;
use App\Models\MailTemplate;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Mail;
use Validator;

class MailTemplateController extends BaseController
{
    protected $modal = 'App\Models\MailTemplate';
    protected $resource = 'App\Http\Resources\MailTemplateResource';
    private $collection = 'App\Http\Resources\MailTemplateCollection';

    public function __construct()
    {
        parent::__construct();
    }

    public function index()
    {
        return parent::index(); // TODO: Change the autogenerated stub
    }

    public function store(Request $request)
    {
        $re = Helper::getRequestJson($request);
        $validator = Validator::make($re, (new $this->modal)->fieldSetValidate());

        if ($validator->fails()) {
            return $this->sendError(404, $validator->errors());
        }

        $data = $this->createMail($re);
//        dd($data);
        return $this->sendResponse(new $this->resource($data), 201);
    }

    protected function createMail($re)
    {
        $mail = new MailTemplate();
        $mail->title = $re['title'];
        $mail->template = $re['template'];
        $mail->status = MailTemplate::STATUS_ACTIVE;
        $mail->save();
        return $mail;
    }

    public function update($id, Request $request)
    {
        $re = Helper::getRequestJson($request);
//        $rules = (new $this->modal)->fieldSetValidateForUpdate($id);
//        $validator = Validator::make($re, $rules);

//        if ($validator->fails()) {
//            return $this->sendError(404, $validator->errors());
//        }
        $object = $this->checkIdRequest($id);

        if ($object === false) {
            return $this->sendError(404, $this->error_msg_no_object);
        }
        $data = $this->updateMail($re, $id);
        return $this->sendResponse(new $this->resource($data), 201);
    }

    protected function updateMail($re, $id)
    {
//        dd($re);
        $mail = MailTemplate::find($id);
//        $mail->template = $re['template'];
        $mail->title = $re['subject'];
        $mail->content = $re['content'];
        $mail->save();
        return $mail;
    }

    protected function list()
    {
        $query = $this->modal::select();

        return $this->sendResponse(
            $this->resource::collection(
                (new $this->modal)->default_query_list($query)
            ), 200);
    }

    public function show($id)
    {
        return parent::show($id); // TODO: Change the autogenerated stub
    }


}
